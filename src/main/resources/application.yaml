# 공통
server:
  port: 8080
spring:
  profiles:
    active: "local"
jwt:
  secret-key: ${JWT_SECRET_KEY:abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl}
  access-expire-time: ${ACCESS_EXPIRE_TIME:123456}
  refresh-expire-time: ${REFRESH_EXPIRE_TIME:12345678}
---
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRESQL_URL}
    username: ${POSTGRESQL_USER}
    password: ${POSTGRESQL_PASSWORD}
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            redirect-uri: ${${GOOGLE_OAUTH_REDIRECT_URI}}
            authorization-grant-type: authorization_code
            scope: email
          naver:
            client-name: naver
            client-id: ${NAVER_OAUTH_CLIENT_ID}
            client-secret: ${NAVER_OAUTH_CLIENT_SECRET}
            redirect-uri: ${NAVER_OAUTH_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: email
          kakao:
            client-name: kakao
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            redirect-uri: ${KAKAO_OAUTH_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: account_email
            client-authentication-method: client_secret_post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  config:
    activate:
      on-profile: "local"
todak:
  cors:
    allowed-origin: ${ALLOWED_LOCAL_ORIGIN}
ai:
  server:
    url:
      domain: ${AI_SERVER_URL_DOMAIN}
---
spring:
  config:
    activate:
      on-profile: "test"
  jpa:
    hibernate:
      ddl-auto: create-drop
  h2:
    console:
      enabled: true
todak:
  cors:
    allowed-origin: "http://localhost:1234"
ai:
  server:
    url:
      domain: "test-ai-server-url-domain"